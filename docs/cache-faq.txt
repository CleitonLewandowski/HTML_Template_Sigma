Q:  What exactly is this cache feature?
A1: This is the way to bypass RegExp parsing on template load. Instead of
    parsing the original template on every request, we keep its internal 
    representation (a serialized array, essentially) and load it instead.
A2: Think about template compilation in Smarty. Only Sigma does not compile
    templates to PHP code.

Q:  What about data?
A:  NO data caching is taking place. If you want to do this, consider using
    PEAR packages Cache or Cache_Lite.

Q:  Is the cached version regenerated when the template changes?
A:  Yes.

Q:  Is there any TTL setting?
A:  No. Cached version is considered valid until the source template changes.

Q:  Any way to flush the cache?
A:  Yes, just delete all the files in the cache dir. :]

Q:  Does this give significant performance gains?
A1: Yes. The answer is based on personal experience.
A2: If you are going to perform some benchmarks, then use some real-world
    complex templates, not artificial ones. The performance gain will be
    greater with bigger and more complex (dozens of blocks) ones.
